const _astro_dataLayerContent = [["Map",1,2,9,10,20,204],"meta::meta",["Map",3,4,5,6,7,8],"astro-version","5.13.6","content-config-digest","603ddb7a0c11c406","astro-config-digest","{\"root\":{},\"srcDir\":{},\"publicDir\":{},\"outDir\":{},\"cacheDir\":{},\"compressHTML\":true,\"base\":\"/\",\"trailingSlash\":\"ignore\",\"output\":\"static\",\"scopedStyleStrategy\":\"attribute\",\"build\":{\"format\":\"directory\",\"client\":{},\"server\":{},\"assets\":\"_astro\",\"serverEntry\":\"entry.mjs\",\"redirects\":true,\"inlineStylesheets\":\"auto\",\"concurrency\":1},\"server\":{\"open\":false,\"host\":false,\"port\":4321,\"streaming\":true,\"allowedHosts\":[]},\"redirects\":{},\"image\":{\"endpoint\":{\"route\":\"/_image\"},\"service\":{\"entrypoint\":\"astro/assets/services/sharp\",\"config\":{}},\"domains\":[],\"remotePatterns\":[],\"responsiveStyles\":false},\"devToolbar\":{\"enabled\":true},\"markdown\":{\"syntaxHighlight\":{\"type\":\"shiki\",\"excludeLangs\":[\"math\"]},\"shikiConfig\":{\"langs\":[],\"langAlias\":{},\"theme\":\"github-dark\",\"themes\":{},\"wrap\":false,\"transformers\":[]},\"remarkPlugins\":[],\"rehypePlugins\":[],\"remarkRehype\":{},\"gfm\":true,\"smartypants\":true},\"security\":{\"checkOrigin\":true},\"env\":{\"schema\":{},\"validateSecrets\":false},\"experimental\":{\"clientPrerender\":false,\"contentIntellisense\":false,\"headingIdCompat\":false,\"preserveScriptOrder\":false,\"liveContentCollections\":false,\"csp\":false,\"staticImportMetaEnv\":false,\"chromeDevtoolsWorkspace\":false},\"legacy\":{\"collections\":false}}","blog",["Map",11,12,33,34,74,75,120,121,161,162],"post-01",{id:11,data:13,body:26,filePath:27,assetImports:28,digest:30,legacyId:31,deferredRender:32},{title:14,date:15,description:16,image:17,author:18,tags:21,isDraft:25},"Explorando Funciones de ES6",["Date","2023-06-01T00:00:00.000Z"],"Explorando algunas de las nuevas funciones de ES6 en JavaScript.","__ASTRO_IMAGE_images/post-01.png",{id:19,collection:20},"jane-doe","author",[22,23,24],"JavaScript","ES6","Programming",false,"# { frontmatter.title }\n\n\nJavaScript ES6 introdujo varias funciones nuevas que han hecho que la codificación en JavaScript sea más eficiente y agradable. Vamos a explorar algunas de estas funciones.\n\n## Arrow Functions - Funciones de Flecha\n\nLas funciones de flecha proporcionan una nueva sintaxis para escribir expresiones de función. Son más concisas y vinculan léxicamente el valor `this`.\n\n### Ejemplo\n\n```javascript\nconst add = (a, b) => a + b;\nconsole.log(add(2, 3)); // Output: 5\n```\n\n## Template Literals - Literales de Plantilla\n\nLos literales de plantilla permiten una interpolación de cadenas más fácil y cadenas de varias líneas. Utilizan comillas invertidas (\\`) en lugar de comillas simples o dobles.\n\n### Ejemplo\n\n```javascript\nconst name = 'Jane';\nconsole.log(`Hello, ${name}!`);\n// Output: Hello, Jane!\n```\n\n## Destructuring Assignment - Asignación por Desestructuración\n\nLa asignación por desestructuración le permite extraer valores de matrices u objetos y asignarlos a variables de una manera más concisa.\n\n### Ejemplo\n\n```javascript\nconst person = { name: 'Jane', age: 30 };\nconst { name, age } = person;\nconsole.log(name, age); // Output: Jane 30\n```","src/content/blog/post-01.mdx",[29],"images/post-01.png","52b4ed8dbe6f44f5","post-01.mdx",true,"post-03",{id:33,data:35,body:45,filePath:46,assetImports:47,digest:49,rendered:50,legacyId:73},{title:36,date:37,description:38,image:39,author:40,tags:42,isDraft:25},"Comprendiendo los Hooks de React",["Date","2023-06-15T00:00:00.000Z"],"Learn how to use React Hooks to manage state and lifecycle in functional components.","__ASTRO_IMAGE_images/post-03.png",{id:41,collection:20},"alice-johnson",[43,22,44],"React","Web Development","# Comprendiendo los Hooks de React\n\nLos Hooks de React son una característica que te permite usar el estado y otras características de React en componentes funcionales. Esto te permite escribir componentes más simples y reutilizables sin tener que convertirlos en clases.\n\n## useState Hook\n\nEl `useState` hook te permite añadir estado a tus componentes funcionales.\n\n```javascript\nimport React, { useState } from 'react';\n\nfunction Counter() {\n  const [count, setCount] = useState(0);\n\n  return (\n    <div>\n      <p>You clicked {count} times</p>\n      <button onClick={() => setCount(count + 1)}>Click me</button>\n    </div>\n  );\n}\n```\n\n## useEffect Hook\n\nEl `useEffect` hook te permite realizar efectos secundarios en tus componentes funcionales, como acceder a datos externos o modificar el DOM.\n\n```javascript\nimport React, { useState, useEffect } from 'react';\n\nfunction Example() {\n  const [count, setCount] = useState(0);\n\n  useEffect(() => {\n    document.title = `You clicked ${count} times`;\n  });\n\n  return (\n    <div>\n      <p>You clicked {count} times</p>\n      <button onClick={() => setCount(count + 1)}>Click me</button>\n    </div>\n  );\n}\n```\n\n## Custom Hooks\n\nPuedes crear tus propios hooks personalizados para reutilizar lógica en tus componentes.\n\n```javascript\nimport { useState } from 'react';\n\nfunction useCounter(initialCount) {\n  const [count, setCount] = useState(initialCount);\n\n  const increment = () => {\n    setCount(count + 1);\n  };\n\n  return { count, increment };\n}\n```\n\nLuego puedes usar tu hook personalizado en tus componentes.\n\n```javascript\nimport React from 'react';\nimport useCounter from './useCounter';\n\nfunction Counter() {\n  const { count, increment } = useCounter(0);\n\n  return (\n    <div>\n      <p>You clicked {count} times</p>\n      <button onClick={increment}>Click me</button>\n    </div>\n  );\n}\n```\n\nLos Hooks de React son una poderosa característica que te permite escribir componentes más limpios y reutilizables en React. ¡Empieza a usarlos en tus proyectos hoy mismo!","src/content/blog/post-03.md",[48],"images/post-03.png","13cbe7458615f152",{html:51,metadata:52},"<h1 id=\"comprendiendo-los-hooks-de-react\">Comprendiendo los Hooks de React</h1>\n<p>Los Hooks de React son una característica que te permite usar el estado y otras características de React en componentes funcionales. Esto te permite escribir componentes más simples y reutilizables sin tener que convertirlos en clases.</p>\n<h2 id=\"usestate-hook\">useState Hook</h2>\n<p>El <code>useState</code> hook te permite añadir estado a tus componentes funcionales.</p>\n<pre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"javascript\"><code><span class=\"line\"><span style=\"color:#F97583\">import</span><span style=\"color:#E1E4E8\"> React, { useState } </span><span style=\"color:#F97583\">from</span><span style=\"color:#9ECBFF\"> 'react'</span><span style=\"color:#E1E4E8\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#F97583\">function</span><span style=\"color:#B392F0\"> Counter</span><span style=\"color:#E1E4E8\">() {</span></span>\n<span class=\"line\"><span style=\"color:#F97583\">  const</span><span style=\"color:#E1E4E8\"> [</span><span style=\"color:#79B8FF\">count</span><span style=\"color:#E1E4E8\">, </span><span style=\"color:#79B8FF\">setCount</span><span style=\"color:#E1E4E8\">] </span><span style=\"color:#F97583\">=</span><span style=\"color:#B392F0\"> useState</span><span style=\"color:#E1E4E8\">(</span><span style=\"color:#79B8FF\">0</span><span style=\"color:#E1E4E8\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#F97583\">  return</span><span style=\"color:#E1E4E8\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">    &#x3C;</span><span style=\"color:#85E89D\">div</span><span style=\"color:#E1E4E8\">></span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">      &#x3C;</span><span style=\"color:#85E89D\">p</span><span style=\"color:#E1E4E8\">>You clicked {count} times&#x3C;/</span><span style=\"color:#85E89D\">p</span><span style=\"color:#E1E4E8\">></span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">      &#x3C;</span><span style=\"color:#85E89D\">button</span><span style=\"color:#B392F0\"> onClick</span><span style=\"color:#F97583\">=</span><span style=\"color:#E1E4E8\">{() </span><span style=\"color:#F97583\">=></span><span style=\"color:#B392F0\"> setCount</span><span style=\"color:#E1E4E8\">(count </span><span style=\"color:#F97583\">+</span><span style=\"color:#79B8FF\"> 1</span><span style=\"color:#E1E4E8\">)}>Click me&#x3C;/</span><span style=\"color:#85E89D\">button</span><span style=\"color:#E1E4E8\">></span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">    &#x3C;/</span><span style=\"color:#85E89D\">div</span><span style=\"color:#E1E4E8\">></span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">  );</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">}</span></span></code></pre>\n<h2 id=\"useeffect-hook\">useEffect Hook</h2>\n<p>El <code>useEffect</code> hook te permite realizar efectos secundarios en tus componentes funcionales, como acceder a datos externos o modificar el DOM.</p>\n<pre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"javascript\"><code><span class=\"line\"><span style=\"color:#F97583\">import</span><span style=\"color:#E1E4E8\"> React, { useState, useEffect } </span><span style=\"color:#F97583\">from</span><span style=\"color:#9ECBFF\"> 'react'</span><span style=\"color:#E1E4E8\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#F97583\">function</span><span style=\"color:#B392F0\"> Example</span><span style=\"color:#E1E4E8\">() {</span></span>\n<span class=\"line\"><span style=\"color:#F97583\">  const</span><span style=\"color:#E1E4E8\"> [</span><span style=\"color:#79B8FF\">count</span><span style=\"color:#E1E4E8\">, </span><span style=\"color:#79B8FF\">setCount</span><span style=\"color:#E1E4E8\">] </span><span style=\"color:#F97583\">=</span><span style=\"color:#B392F0\"> useState</span><span style=\"color:#E1E4E8\">(</span><span style=\"color:#79B8FF\">0</span><span style=\"color:#E1E4E8\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#B392F0\">  useEffect</span><span style=\"color:#E1E4E8\">(() </span><span style=\"color:#F97583\">=></span><span style=\"color:#E1E4E8\"> {</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">    document.title </span><span style=\"color:#F97583\">=</span><span style=\"color:#9ECBFF\"> `You clicked ${</span><span style=\"color:#E1E4E8\">count</span><span style=\"color:#9ECBFF\">} times`</span><span style=\"color:#E1E4E8\">;</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">  });</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#F97583\">  return</span><span style=\"color:#E1E4E8\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">    &#x3C;</span><span style=\"color:#85E89D\">div</span><span style=\"color:#E1E4E8\">></span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">      &#x3C;</span><span style=\"color:#85E89D\">p</span><span style=\"color:#E1E4E8\">>You clicked {count} times&#x3C;/</span><span style=\"color:#85E89D\">p</span><span style=\"color:#E1E4E8\">></span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">      &#x3C;</span><span style=\"color:#85E89D\">button</span><span style=\"color:#B392F0\"> onClick</span><span style=\"color:#F97583\">=</span><span style=\"color:#E1E4E8\">{() </span><span style=\"color:#F97583\">=></span><span style=\"color:#B392F0\"> setCount</span><span style=\"color:#E1E4E8\">(count </span><span style=\"color:#F97583\">+</span><span style=\"color:#79B8FF\"> 1</span><span style=\"color:#E1E4E8\">)}>Click me&#x3C;/</span><span style=\"color:#85E89D\">button</span><span style=\"color:#E1E4E8\">></span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">    &#x3C;/</span><span style=\"color:#85E89D\">div</span><span style=\"color:#E1E4E8\">></span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">  );</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">}</span></span></code></pre>\n<h2 id=\"custom-hooks\">Custom Hooks</h2>\n<p>Puedes crear tus propios hooks personalizados para reutilizar lógica en tus componentes.</p>\n<pre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"javascript\"><code><span class=\"line\"><span style=\"color:#F97583\">import</span><span style=\"color:#E1E4E8\"> { useState } </span><span style=\"color:#F97583\">from</span><span style=\"color:#9ECBFF\"> 'react'</span><span style=\"color:#E1E4E8\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#F97583\">function</span><span style=\"color:#B392F0\"> useCounter</span><span style=\"color:#E1E4E8\">(</span><span style=\"color:#FFAB70\">initialCount</span><span style=\"color:#E1E4E8\">) {</span></span>\n<span class=\"line\"><span style=\"color:#F97583\">  const</span><span style=\"color:#E1E4E8\"> [</span><span style=\"color:#79B8FF\">count</span><span style=\"color:#E1E4E8\">, </span><span style=\"color:#79B8FF\">setCount</span><span style=\"color:#E1E4E8\">] </span><span style=\"color:#F97583\">=</span><span style=\"color:#B392F0\"> useState</span><span style=\"color:#E1E4E8\">(initialCount);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#F97583\">  const</span><span style=\"color:#B392F0\"> increment</span><span style=\"color:#F97583\"> =</span><span style=\"color:#E1E4E8\"> () </span><span style=\"color:#F97583\">=></span><span style=\"color:#E1E4E8\"> {</span></span>\n<span class=\"line\"><span style=\"color:#B392F0\">    setCount</span><span style=\"color:#E1E4E8\">(count </span><span style=\"color:#F97583\">+</span><span style=\"color:#79B8FF\"> 1</span><span style=\"color:#E1E4E8\">);</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">  };</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#F97583\">  return</span><span style=\"color:#E1E4E8\"> { count, increment };</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">}</span></span></code></pre>\n<p>Luego puedes usar tu hook personalizado en tus componentes.</p>\n<pre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"javascript\"><code><span class=\"line\"><span style=\"color:#F97583\">import</span><span style=\"color:#E1E4E8\"> React </span><span style=\"color:#F97583\">from</span><span style=\"color:#9ECBFF\"> 'react'</span><span style=\"color:#E1E4E8\">;</span></span>\n<span class=\"line\"><span style=\"color:#F97583\">import</span><span style=\"color:#E1E4E8\"> useCounter </span><span style=\"color:#F97583\">from</span><span style=\"color:#9ECBFF\"> './useCounter'</span><span style=\"color:#E1E4E8\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#F97583\">function</span><span style=\"color:#B392F0\"> Counter</span><span style=\"color:#E1E4E8\">() {</span></span>\n<span class=\"line\"><span style=\"color:#F97583\">  const</span><span style=\"color:#E1E4E8\"> { </span><span style=\"color:#79B8FF\">count</span><span style=\"color:#E1E4E8\">, </span><span style=\"color:#79B8FF\">increment</span><span style=\"color:#E1E4E8\"> } </span><span style=\"color:#F97583\">=</span><span style=\"color:#B392F0\"> useCounter</span><span style=\"color:#E1E4E8\">(</span><span style=\"color:#79B8FF\">0</span><span style=\"color:#E1E4E8\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#F97583\">  return</span><span style=\"color:#E1E4E8\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">    &#x3C;</span><span style=\"color:#85E89D\">div</span><span style=\"color:#E1E4E8\">></span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">      &#x3C;</span><span style=\"color:#85E89D\">p</span><span style=\"color:#E1E4E8\">>You clicked {count} times&#x3C;/</span><span style=\"color:#85E89D\">p</span><span style=\"color:#E1E4E8\">></span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">      &#x3C;</span><span style=\"color:#85E89D\">button</span><span style=\"color:#B392F0\"> onClick</span><span style=\"color:#F97583\">=</span><span style=\"color:#E1E4E8\">{increment}>Click me&#x3C;/</span><span style=\"color:#85E89D\">button</span><span style=\"color:#E1E4E8\">></span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">    &#x3C;/</span><span style=\"color:#85E89D\">div</span><span style=\"color:#E1E4E8\">></span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">  );</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">}</span></span></code></pre>\n<p>Los Hooks de React son una poderosa característica que te permite escribir componentes más limpios y reutilizables en React. ¡Empieza a usarlos en tus proyectos hoy mismo!</p>",{headings:53,localImagePaths:67,remoteImagePaths:68,frontmatter:69,imagePaths:72},[54,57,61,64],{depth:55,slug:56,text:36},1,"comprendiendo-los-hooks-de-react",{depth:58,slug:59,text:60},2,"usestate-hook","useState Hook",{depth:58,slug:62,text:63},"useeffect-hook","useEffect Hook",{depth:58,slug:65,text:66},"custom-hooks","Custom Hooks",[],[],{title:36,date:70,description:38,author:41,image:48,tags:71,isDraft:25},["Date","2023-06-15T00:00:00.000Z"],[43,22,44],[],"post-03.md","post-05",{id:74,data:76,body:86,filePath:87,assetImports:88,digest:90,rendered:91,legacyId:119},{title:77,date:78,description:79,image:80,author:81,tags:82,isDraft:25},"CSS Grid Layout - Una guía completa",["Date","2023-06-25T00:00:00.000Z"],"Aprende a utilizar CSS Grid Layout para crear diseños complejos de forma sencilla.","__ASTRO_IMAGE_images/post-05.png",{id:19,collection:20},[83,84,85],"CSS","Web Design","Frontend","# CSS Grid Layout: Una guía completa\n\nCSS Grid Layout es una poderosa herramienta que te permite crear diseños complejos de forma sencilla y flexible. En esta guía, aprenderás cómo utilizar CSS Grid Layout para crear diseños de páginas web modernas y responsivas.\n\n## Introducción a CSS Grid\n\nCSS Grid Layout es un sistema de diseño bidimensional que te permite crear diseños de páginas web utilizando filas y columnas. Con CSS Grid Layout, puedes crear diseños complejos y flexibles sin necesidad de utilizar floats o frameworks de diseño.\n\n```css\n.container {\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  gap: 10px;\n}\n```\n\nEste grid container creará una cuadrícula con tres columnas y un espacio de 10px entre los elementos de la cuadrícula. También puedes utilizar la propiedad `grid-template-rows` para definir las filas de la cuadrícula.\n\n## Grid Items\n\nLos elementos dentro de un grid container se denominan grid items. Puedes colocar los grid items en la cuadrícula utilizando las propiedades `grid-column` y `grid-row`.\n\n```css\n.item {\n  grid-column: 2 / 4;\n  grid-row: 1 / 3;\n}\n```\n\nEste código colocará el elemento en la segunda y tercera columnas y en la primera y segunda filas de la cuadrícula.\n\n## Grid Areas\n\nCSS Grid Layout también te permite definir áreas con nombre en tu cuadrícula. Esto hace que sea más fácil colocar elementos en áreas específicas de la cuadrícula.\n\n```css\n.container {\n  grid-template-areas:\n    'header header header'\n    'sidebar content content'\n    'footer footer footer';\n}\n\n.item {\n  grid-area: content;\n}\n```\n\nEste código define un grid container con áreas de encabezado, barra lateral, contenido y pie de página. El elemento con la clase `item` se colocará en el área de contenido de la cuadrícula.\n\n## Responsive Grids\n\nCSS Grid Layout es perfecto para crear diseños responsivos. Puedes utilizar las funciones `minmax()` y `auto-fill` para crear cuadrículas que se adapten a diferentes tamaños de pantalla.\n\n```css\n.container {\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n}\n```\n\nEste código creará una cuadrícula con columnas que tienen al menos 200px de ancho y se expanden para llenar el espacio disponible. La palabra clave `auto-fill` permite que la cuadrícula cree automáticamente nuevas columnas según sea necesario.\n\n## Browser Support\n\nCSS Grid Layout es compatible con la mayoría de los navegadores modernos, incluidos Chrome, Firefox, Safari y Edge. Puedes utilizar CSS Grid Layout en tus proyectos web sin preocuparte por la compatibilidad con los navegadores.\n\n¡Esperamos que esta guía te haya ayudado a comprender mejor CSS Grid Layout y cómo puedes utilizarlo para crear diseños de páginas web modernas y responsivas!","src/content/blog/post-05.md",[89],"images/post-05.png","94c32c509f01d4d9",{html:92,metadata:93},"<h1 id=\"css-grid-layout-una-guía-completa\">CSS Grid Layout: Una guía completa</h1>\n<p>CSS Grid Layout es una poderosa herramienta que te permite crear diseños complejos de forma sencilla y flexible. En esta guía, aprenderás cómo utilizar CSS Grid Layout para crear diseños de páginas web modernas y responsivas.</p>\n<h2 id=\"introducción-a-css-grid\">Introducción a CSS Grid</h2>\n<p>CSS Grid Layout es un sistema de diseño bidimensional que te permite crear diseños de páginas web utilizando filas y columnas. Con CSS Grid Layout, puedes crear diseños complejos y flexibles sin necesidad de utilizar floats o frameworks de diseño.</p>\n<pre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"css\"><code><span class=\"line\"><span style=\"color:#B392F0\">.container</span><span style=\"color:#E1E4E8\"> {</span></span>\n<span class=\"line\"><span style=\"color:#79B8FF\">  display</span><span style=\"color:#E1E4E8\">: </span><span style=\"color:#79B8FF\">grid</span><span style=\"color:#E1E4E8\">;</span></span>\n<span class=\"line\"><span style=\"color:#79B8FF\">  grid-template-columns</span><span style=\"color:#E1E4E8\">: </span><span style=\"color:#79B8FF\">repeat</span><span style=\"color:#E1E4E8\">(</span><span style=\"color:#79B8FF\">3</span><span style=\"color:#E1E4E8\">, </span><span style=\"color:#79B8FF\">1</span><span style=\"color:#F97583\">fr</span><span style=\"color:#E1E4E8\">);</span></span>\n<span class=\"line\"><span style=\"color:#79B8FF\">  gap</span><span style=\"color:#E1E4E8\">: </span><span style=\"color:#79B8FF\">10</span><span style=\"color:#F97583\">px</span><span style=\"color:#E1E4E8\">;</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">}</span></span></code></pre>\n<p>Este grid container creará una cuadrícula con tres columnas y un espacio de 10px entre los elementos de la cuadrícula. También puedes utilizar la propiedad <code>grid-template-rows</code> para definir las filas de la cuadrícula.</p>\n<h2 id=\"grid-items\">Grid Items</h2>\n<p>Los elementos dentro de un grid container se denominan grid items. Puedes colocar los grid items en la cuadrícula utilizando las propiedades <code>grid-column</code> y <code>grid-row</code>.</p>\n<pre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"css\"><code><span class=\"line\"><span style=\"color:#B392F0\">.item</span><span style=\"color:#E1E4E8\"> {</span></span>\n<span class=\"line\"><span style=\"color:#79B8FF\">  grid-column</span><span style=\"color:#E1E4E8\">: </span><span style=\"color:#79B8FF\">2</span><span style=\"color:#E1E4E8\"> / </span><span style=\"color:#79B8FF\">4</span><span style=\"color:#E1E4E8\">;</span></span>\n<span class=\"line\"><span style=\"color:#79B8FF\">  grid-row</span><span style=\"color:#E1E4E8\">: </span><span style=\"color:#79B8FF\">1</span><span style=\"color:#E1E4E8\"> / </span><span style=\"color:#79B8FF\">3</span><span style=\"color:#E1E4E8\">;</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">}</span></span></code></pre>\n<p>Este código colocará el elemento en la segunda y tercera columnas y en la primera y segunda filas de la cuadrícula.</p>\n<h2 id=\"grid-areas\">Grid Areas</h2>\n<p>CSS Grid Layout también te permite definir áreas con nombre en tu cuadrícula. Esto hace que sea más fácil colocar elementos en áreas específicas de la cuadrícula.</p>\n<pre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"css\"><code><span class=\"line\"><span style=\"color:#B392F0\">.container</span><span style=\"color:#E1E4E8\"> {</span></span>\n<span class=\"line\"><span style=\"color:#79B8FF\">  grid-template-areas</span><span style=\"color:#E1E4E8\">:</span></span>\n<span class=\"line\"><span style=\"color:#9ECBFF\">    'header header header'</span></span>\n<span class=\"line\"><span style=\"color:#9ECBFF\">    'sidebar content content'</span></span>\n<span class=\"line\"><span style=\"color:#9ECBFF\">    'footer footer footer'</span><span style=\"color:#E1E4E8\">;</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#B392F0\">.item</span><span style=\"color:#E1E4E8\"> {</span></span>\n<span class=\"line\"><span style=\"color:#79B8FF\">  grid-area</span><span style=\"color:#E1E4E8\">: </span><span style=\"color:#79B8FF\">content</span><span style=\"color:#E1E4E8\">;</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">}</span></span></code></pre>\n<p>Este código define un grid container con áreas de encabezado, barra lateral, contenido y pie de página. El elemento con la clase <code>item</code> se colocará en el área de contenido de la cuadrícula.</p>\n<h2 id=\"responsive-grids\">Responsive Grids</h2>\n<p>CSS Grid Layout es perfecto para crear diseños responsivos. Puedes utilizar las funciones <code>minmax()</code> y <code>auto-fill</code> para crear cuadrículas que se adapten a diferentes tamaños de pantalla.</p>\n<pre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"css\"><code><span class=\"line\"><span style=\"color:#B392F0\">.container</span><span style=\"color:#E1E4E8\"> {</span></span>\n<span class=\"line\"><span style=\"color:#79B8FF\">  display</span><span style=\"color:#E1E4E8\">: </span><span style=\"color:#79B8FF\">grid</span><span style=\"color:#E1E4E8\">;</span></span>\n<span class=\"line\"><span style=\"color:#79B8FF\">  grid-template-columns</span><span style=\"color:#E1E4E8\">: </span><span style=\"color:#79B8FF\">repeat</span><span style=\"color:#E1E4E8\">(</span><span style=\"color:#79B8FF\">auto-fill</span><span style=\"color:#E1E4E8\">, </span><span style=\"color:#79B8FF\">minmax</span><span style=\"color:#E1E4E8\">(</span><span style=\"color:#79B8FF\">200</span><span style=\"color:#F97583\">px</span><span style=\"color:#E1E4E8\">, </span><span style=\"color:#79B8FF\">1</span><span style=\"color:#F97583\">fr</span><span style=\"color:#E1E4E8\">));</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">}</span></span></code></pre>\n<p>Este código creará una cuadrícula con columnas que tienen al menos 200px de ancho y se expanden para llenar el espacio disponible. La palabra clave <code>auto-fill</code> permite que la cuadrícula cree automáticamente nuevas columnas según sea necesario.</p>\n<h2 id=\"browser-support\">Browser Support</h2>\n<p>CSS Grid Layout es compatible con la mayoría de los navegadores modernos, incluidos Chrome, Firefox, Safari y Edge. Puedes utilizar CSS Grid Layout en tus proyectos web sin preocuparte por la compatibilidad con los navegadores.</p>\n<p>¡Esperamos que esta guía te haya ayudado a comprender mejor CSS Grid Layout y cómo puedes utilizarlo para crear diseños de páginas web modernas y responsivas!</p>",{headings:94,localImagePaths:113,remoteImagePaths:114,frontmatter:115,imagePaths:118},[95,98,101,104,107,110],{depth:55,slug:96,text:97},"css-grid-layout-una-guía-completa","CSS Grid Layout: Una guía completa",{depth:58,slug:99,text:100},"introducción-a-css-grid","Introducción a CSS Grid",{depth:58,slug:102,text:103},"grid-items","Grid Items",{depth:58,slug:105,text:106},"grid-areas","Grid Areas",{depth:58,slug:108,text:109},"responsive-grids","Responsive Grids",{depth:58,slug:111,text:112},"browser-support","Browser Support",[],[],{title:77,date:116,description:79,author:19,image:89,tags:117},["Date","2023-06-25T00:00:00.000Z"],[83,84,85],[],"post-05.md","post-04",{id:120,data:122,body:134,filePath:135,assetImports:136,digest:138,rendered:139,legacyId:160},{title:123,date:124,description:125,image:126,author:127,tags:129,isDraft:25},"Construyendo una API REST con Node.js",["Date","2023-06-20T00:00:00.000Z"],"En este tutorial, construiremos una API RESTful utilizando Node.js y Express.","__ASTRO_IMAGE_images/post-04.png",{id:128,collection:20},"bob-williams",[130,131,132,133],"Node.js","Express","API","Backend","# Construyendo una API REST con Node.js\n\nEn este tutorial, construiremos una API RESTful utilizando Node.js y Express. Una API RESTful es una interfaz de programación de aplicaciones que sigue los principios de REST (Representational State Transfer). Utilizaremos Express, un marco de aplicaciones web de Node.js, para crear nuestra API.\n\n## Instalación de Node.js\n\nPrimero, necesitas instalar Node.js en tu sistema. Puedes descargar Node.js desde el [sitio web oficial](https://nodejs.org/).\n\n```bash\nnpm init -y\nnpm install express\n```\n\nCreamos un archivo `index.js` y agregamos el siguiente código:\n\n```javascript\nconst express = require('express');\nconst app = express();\nconst port = 3000;\n\napp.get('/', (req, res) => {\n  res.send('Hello World!');\n});\n\napp.listen(port, () => {\n  console.log(`Server is running on http://localhost:${port}`);\n});\n```\n\nPara ejecutar la aplicación, ejecuta el siguiente comando:\n\n```bash\nnode index.js\n```\n\nAhora puedes acceder a tu aplicación en `http://localhost:3000`.\n\n## Creación de rutas para la API\n\nVamos a crear algunas rutas para nuestra API. Por ejemplo, una ruta para obtener una lista de usuarios y otra ruta para obtener un usuario por su ID.\n\n```javascript\napp.get('/api/users', (req, res) => {\n  res.json([\n    { id: 1, name: 'Alice' },\n    { id: 2, name: 'Bob' },\n  ]);\n});\n\napp.get('/api/users/:id', (req, res) => {\n  const id = req.params.id;\n  res.json({ id, name: 'Alice' });\n});\n```\n\nAhora puedes acceder a la API de usuarios en `http://localhost:3000/api/users` y `http://localhost:3000/api/users/1`.\n\n## Conclusion\n\nEn este tutorial, hemos construido una API RESTful utilizando Node.js y Express. Puedes agregar más rutas y funcionalidades a tu API según tus necesidades. ¡Diviértete construyendo tu API!\n\nEspero que este tutorial te haya sido útil. Si tienes alguna pregunta, no dudes en dejar un comentario.","src/content/blog/post-04.md",[137],"images/post-04.png","1b9f488c518f082b",{html:140,metadata:141},"<h1 id=\"construyendo-una-api-rest-con-nodejs\">Construyendo una API REST con Node.js</h1>\n<p>En este tutorial, construiremos una API RESTful utilizando Node.js y Express. Una API RESTful es una interfaz de programación de aplicaciones que sigue los principios de REST (Representational State Transfer). Utilizaremos Express, un marco de aplicaciones web de Node.js, para crear nuestra API.</p>\n<h2 id=\"instalación-de-nodejs\">Instalación de Node.js</h2>\n<p>Primero, necesitas instalar Node.js en tu sistema. Puedes descargar Node.js desde el <a href=\"https://nodejs.org/\">sitio web oficial</a>.</p>\n<pre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"bash\"><code><span class=\"line\"><span style=\"color:#B392F0\">npm</span><span style=\"color:#9ECBFF\"> init</span><span style=\"color:#79B8FF\"> -y</span></span>\n<span class=\"line\"><span style=\"color:#B392F0\">npm</span><span style=\"color:#9ECBFF\"> install</span><span style=\"color:#9ECBFF\"> express</span></span></code></pre>\n<p>Creamos un archivo <code>index.js</code> y agregamos el siguiente código:</p>\n<pre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"javascript\"><code><span class=\"line\"><span style=\"color:#F97583\">const</span><span style=\"color:#79B8FF\"> express</span><span style=\"color:#F97583\"> =</span><span style=\"color:#B392F0\"> require</span><span style=\"color:#E1E4E8\">(</span><span style=\"color:#9ECBFF\">'express'</span><span style=\"color:#E1E4E8\">);</span></span>\n<span class=\"line\"><span style=\"color:#F97583\">const</span><span style=\"color:#79B8FF\"> app</span><span style=\"color:#F97583\"> =</span><span style=\"color:#B392F0\"> express</span><span style=\"color:#E1E4E8\">();</span></span>\n<span class=\"line\"><span style=\"color:#F97583\">const</span><span style=\"color:#79B8FF\"> port</span><span style=\"color:#F97583\"> =</span><span style=\"color:#79B8FF\"> 3000</span><span style=\"color:#E1E4E8\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">app.</span><span style=\"color:#B392F0\">get</span><span style=\"color:#E1E4E8\">(</span><span style=\"color:#9ECBFF\">'/'</span><span style=\"color:#E1E4E8\">, (</span><span style=\"color:#FFAB70\">req</span><span style=\"color:#E1E4E8\">, </span><span style=\"color:#FFAB70\">res</span><span style=\"color:#E1E4E8\">) </span><span style=\"color:#F97583\">=></span><span style=\"color:#E1E4E8\"> {</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">  res.</span><span style=\"color:#B392F0\">send</span><span style=\"color:#E1E4E8\">(</span><span style=\"color:#9ECBFF\">'Hello World!'</span><span style=\"color:#E1E4E8\">);</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">});</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">app.</span><span style=\"color:#B392F0\">listen</span><span style=\"color:#E1E4E8\">(port, () </span><span style=\"color:#F97583\">=></span><span style=\"color:#E1E4E8\"> {</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">  console.</span><span style=\"color:#B392F0\">log</span><span style=\"color:#E1E4E8\">(</span><span style=\"color:#9ECBFF\">`Server is running on http://localhost:${</span><span style=\"color:#E1E4E8\">port</span><span style=\"color:#9ECBFF\">}`</span><span style=\"color:#E1E4E8\">);</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">});</span></span></code></pre>\n<p>Para ejecutar la aplicación, ejecuta el siguiente comando:</p>\n<pre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"bash\"><code><span class=\"line\"><span style=\"color:#B392F0\">node</span><span style=\"color:#9ECBFF\"> index.js</span></span></code></pre>\n<p>Ahora puedes acceder a tu aplicación en <code>http://localhost:3000</code>.</p>\n<h2 id=\"creación-de-rutas-para-la-api\">Creación de rutas para la API</h2>\n<p>Vamos a crear algunas rutas para nuestra API. Por ejemplo, una ruta para obtener una lista de usuarios y otra ruta para obtener un usuario por su ID.</p>\n<pre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"javascript\"><code><span class=\"line\"><span style=\"color:#E1E4E8\">app.</span><span style=\"color:#B392F0\">get</span><span style=\"color:#E1E4E8\">(</span><span style=\"color:#9ECBFF\">'/api/users'</span><span style=\"color:#E1E4E8\">, (</span><span style=\"color:#FFAB70\">req</span><span style=\"color:#E1E4E8\">, </span><span style=\"color:#FFAB70\">res</span><span style=\"color:#E1E4E8\">) </span><span style=\"color:#F97583\">=></span><span style=\"color:#E1E4E8\"> {</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">  res.</span><span style=\"color:#B392F0\">json</span><span style=\"color:#E1E4E8\">([</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">    { id: </span><span style=\"color:#79B8FF\">1</span><span style=\"color:#E1E4E8\">, name: </span><span style=\"color:#9ECBFF\">'Alice'</span><span style=\"color:#E1E4E8\"> },</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">    { id: </span><span style=\"color:#79B8FF\">2</span><span style=\"color:#E1E4E8\">, name: </span><span style=\"color:#9ECBFF\">'Bob'</span><span style=\"color:#E1E4E8\"> },</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">  ]);</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">});</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">app.</span><span style=\"color:#B392F0\">get</span><span style=\"color:#E1E4E8\">(</span><span style=\"color:#9ECBFF\">'/api/users/:id'</span><span style=\"color:#E1E4E8\">, (</span><span style=\"color:#FFAB70\">req</span><span style=\"color:#E1E4E8\">, </span><span style=\"color:#FFAB70\">res</span><span style=\"color:#E1E4E8\">) </span><span style=\"color:#F97583\">=></span><span style=\"color:#E1E4E8\"> {</span></span>\n<span class=\"line\"><span style=\"color:#F97583\">  const</span><span style=\"color:#79B8FF\"> id</span><span style=\"color:#F97583\"> =</span><span style=\"color:#E1E4E8\"> req.params.id;</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">  res.</span><span style=\"color:#B392F0\">json</span><span style=\"color:#E1E4E8\">({ id, name: </span><span style=\"color:#9ECBFF\">'Alice'</span><span style=\"color:#E1E4E8\"> });</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">});</span></span></code></pre>\n<p>Ahora puedes acceder a la API de usuarios en <code>http://localhost:3000/api/users</code> y <code>http://localhost:3000/api/users/1</code>.</p>\n<h2 id=\"conclusion\">Conclusion</h2>\n<p>En este tutorial, hemos construido una API RESTful utilizando Node.js y Express. Puedes agregar más rutas y funcionalidades a tu API según tus necesidades. ¡Diviértete construyendo tu API!</p>\n<p>Espero que este tutorial te haya sido útil. Si tienes alguna pregunta, no dudes en dejar un comentario.</p>",{headings:142,localImagePaths:154,remoteImagePaths:155,frontmatter:156,imagePaths:159},[143,145,148,151],{depth:55,slug:144,text:123},"construyendo-una-api-rest-con-nodejs",{depth:58,slug:146,text:147},"instalación-de-nodejs","Instalación de Node.js",{depth:58,slug:149,text:150},"creación-de-rutas-para-la-api","Creación de rutas para la API",{depth:58,slug:152,text:153},"conclusion","Conclusion",[],[],{title:123,date:157,description:125,author:128,image:137,tags:158},["Date","2023-06-20T00:00:00.000Z"],[130,131,132,133],[],"post-04.md","post-02",{id:161,data:163,body:174,filePath:175,assetImports:176,digest:178,rendered:179,legacyId:203},{title:164,date:165,description:166,image:167,author:168,tags:170,isDraft:25},"Empezando con Flutter",["Date","2024-08-10T00:00:00.000Z"],"Aprende a desarrollar aplicaciones móviles con Flutter y Dart.","__ASTRO_IMAGE_images/post-02.png",{id:169,collection:20},"john-smith",[171,172,173],"Flutter","Mobile Development","Dart","# Empezando con Flutter\n\nFlutter es un kit de herramientas de IU para construir aplicaciones compiladas nativamente para móviles, web y escritorio desde un único código base.\n\n## Instalación de Flutter\n\nPara comenzar a desarrollar con Flutter, primero necesitas instalar el SDK de Flutter en tu sistema. Puedes seguir las instrucciones de instalación en la [documentación oficial de Flutter](https://flutter.dev/docs/get-started/install).\n\n```bash\nflutter doctor\n```\n\nEste comando te ayudará a verificar si tienes todo lo necesario para comenzar a desarrollar con Flutter.\n\n## Creación de un Nuevo Proyecto\n\nPuedes crear un nuevo proyecto de Flutter utilizando el siguiente comando:\n\n```bash\nflutter create my_first_app\ncd my_first_app\n```\n\nEsto creará un nuevo proyecto de Flutter en el directorio `my_first_app`.\n\n## Ejecución de la Aplicación\n\nPara ejecutar tu aplicación de Flutter, puedes utilizar el siguiente comando:\n\n```bash\nflutter run\n```\n\nEsto compilará y ejecutará tu aplicación en un emulador o dispositivo conectado. ¡Ahora puedes ver tu aplicación en acción!\n\n## Escribiendo tu Primera Aplicación\n\nPuedes editar el archivo `lib/main.dart` para comenzar a escribir tu aplicación de Flutter. Aquí tienes un ejemplo de una aplicación de contador simple.\n\n```dart\nimport 'package:flutter/material.dart';\n\nvoid main() {\n  runApp(MyApp());\n}\n\nclass MyApp extends StatelessWidget {\n  @override\n  Widget build(BuildContext context) {\n    return MaterialApp(\n      title: 'Flutter Demo',\n      home: MyHomePage(),\n    );\n  }\n}\n\nclass MyHomePage extends StatefulWidget {\n  @override\n  _MyHomePageState createState() => _MyHomePageState();\n}\n\nclass _MyHomePage\n\nState extends State<MyHomePage> {\n  int _counter = 0;\n\n  void _incrementCounter() {\n    setState(() {\n      _counter++;\n    });\n  }\n\n  @override\n  Widget build(BuildContext context) {\n    return Scaffold(\n      appBar: AppBar(\n        title: Text('Flutter Demo'),\n      ),\n      body: Center(\n        child: Column(\n          mainAxisAlignment: MainAxisAlignment.center,\n          children: <Widget>[\n            Text(\n              'You have pushed the button this many times:',\n            ),\n            Text(\n              '$_counter',\n              style: Theme.of(context).textTheme.headline4,\n            ),\n          ],\n        ),\n      ),\n      floatingActionButton: FloatingActionButton(\n        onPressed: _incrementCounter,\n        tooltip: 'Increment',\n        child: Icon(Icons.add),\n      ),\n    );\n  }\n}\n```","src/content/blog/post-02.md",[177],"images/post-02.png","59bc0054ac535f70",{html:180,metadata:181},"<h1 id=\"empezando-con-flutter\">Empezando con Flutter</h1>\n<p>Flutter es un kit de herramientas de IU para construir aplicaciones compiladas nativamente para móviles, web y escritorio desde un único código base.</p>\n<h2 id=\"instalación-de-flutter\">Instalación de Flutter</h2>\n<p>Para comenzar a desarrollar con Flutter, primero necesitas instalar el SDK de Flutter en tu sistema. Puedes seguir las instrucciones de instalación en la <a href=\"https://flutter.dev/docs/get-started/install\">documentación oficial de Flutter</a>.</p>\n<pre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"bash\"><code><span class=\"line\"><span style=\"color:#B392F0\">flutter</span><span style=\"color:#9ECBFF\"> doctor</span></span></code></pre>\n<p>Este comando te ayudará a verificar si tienes todo lo necesario para comenzar a desarrollar con Flutter.</p>\n<h2 id=\"creación-de-un-nuevo-proyecto\">Creación de un Nuevo Proyecto</h2>\n<p>Puedes crear un nuevo proyecto de Flutter utilizando el siguiente comando:</p>\n<pre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"bash\"><code><span class=\"line\"><span style=\"color:#B392F0\">flutter</span><span style=\"color:#9ECBFF\"> create</span><span style=\"color:#9ECBFF\"> my_first_app</span></span>\n<span class=\"line\"><span style=\"color:#79B8FF\">cd</span><span style=\"color:#9ECBFF\"> my_first_app</span></span></code></pre>\n<p>Esto creará un nuevo proyecto de Flutter en el directorio <code>my_first_app</code>.</p>\n<h2 id=\"ejecución-de-la-aplicación\">Ejecución de la Aplicación</h2>\n<p>Para ejecutar tu aplicación de Flutter, puedes utilizar el siguiente comando:</p>\n<pre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"bash\"><code><span class=\"line\"><span style=\"color:#B392F0\">flutter</span><span style=\"color:#9ECBFF\"> run</span></span></code></pre>\n<p>Esto compilará y ejecutará tu aplicación en un emulador o dispositivo conectado. ¡Ahora puedes ver tu aplicación en acción!</p>\n<h2 id=\"escribiendo-tu-primera-aplicación\">Escribiendo tu Primera Aplicación</h2>\n<p>Puedes editar el archivo <code>lib/main.dart</code> para comenzar a escribir tu aplicación de Flutter. Aquí tienes un ejemplo de una aplicación de contador simple.</p>\n<pre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"dart\"><code><span class=\"line\"><span style=\"color:#F97583\">import</span><span style=\"color:#9ECBFF\"> 'package:flutter/material.dart'</span><span style=\"color:#E1E4E8\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#F97583\">void</span><span style=\"color:#B392F0\"> main</span><span style=\"color:#E1E4E8\">() {</span></span>\n<span class=\"line\"><span style=\"color:#B392F0\">  runApp</span><span style=\"color:#E1E4E8\">(</span><span style=\"color:#79B8FF\">MyApp</span><span style=\"color:#E1E4E8\">());</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#F97583\">class</span><span style=\"color:#79B8FF\"> MyApp</span><span style=\"color:#F97583\"> extends</span><span style=\"color:#79B8FF\"> StatelessWidget</span><span style=\"color:#E1E4E8\"> {</span></span>\n<span class=\"line\"><span style=\"color:#F97583\">  @override</span></span>\n<span class=\"line\"><span style=\"color:#79B8FF\">  Widget</span><span style=\"color:#B392F0\"> build</span><span style=\"color:#E1E4E8\">(</span><span style=\"color:#79B8FF\">BuildContext</span><span style=\"color:#E1E4E8\"> context) {</span></span>\n<span class=\"line\"><span style=\"color:#F97583\">    return</span><span style=\"color:#79B8FF\"> MaterialApp</span><span style=\"color:#E1E4E8\">(</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">      title</span><span style=\"color:#F97583\">:</span><span style=\"color:#9ECBFF\"> 'Flutter Demo'</span><span style=\"color:#E1E4E8\">,</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">      home</span><span style=\"color:#F97583\">:</span><span style=\"color:#79B8FF\"> MyHomePage</span><span style=\"color:#E1E4E8\">(),</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">    );</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">  }</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#F97583\">class</span><span style=\"color:#79B8FF\"> MyHomePage</span><span style=\"color:#F97583\"> extends</span><span style=\"color:#79B8FF\"> StatefulWidget</span><span style=\"color:#E1E4E8\"> {</span></span>\n<span class=\"line\"><span style=\"color:#F97583\">  @override</span></span>\n<span class=\"line\"><span style=\"color:#79B8FF\">  _MyHomePageState</span><span style=\"color:#B392F0\"> createState</span><span style=\"color:#E1E4E8\">() </span><span style=\"color:#F97583\">=></span><span style=\"color:#79B8FF\"> _MyHomePageState</span><span style=\"color:#E1E4E8\">();</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#F97583\">class</span><span style=\"color:#79B8FF\"> _MyHomePage</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#79B8FF\">State</span><span style=\"color:#F97583\"> extends</span><span style=\"color:#79B8FF\"> State</span><span style=\"color:#E1E4E8\">&#x3C;</span><span style=\"color:#79B8FF\">MyHomePage</span><span style=\"color:#E1E4E8\">> {</span></span>\n<span class=\"line\"><span style=\"color:#79B8FF\">  int</span><span style=\"color:#E1E4E8\"> _counter </span><span style=\"color:#F97583\">=</span><span style=\"color:#79B8FF\"> 0</span><span style=\"color:#E1E4E8\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#F97583\">  void</span><span style=\"color:#B392F0\"> _incrementCounter</span><span style=\"color:#E1E4E8\">() {</span></span>\n<span class=\"line\"><span style=\"color:#B392F0\">    setState</span><span style=\"color:#E1E4E8\">(() {</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">      _counter</span><span style=\"color:#F97583\">++</span><span style=\"color:#E1E4E8\">;</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">    });</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">  }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#F97583\">  @override</span></span>\n<span class=\"line\"><span style=\"color:#79B8FF\">  Widget</span><span style=\"color:#B392F0\"> build</span><span style=\"color:#E1E4E8\">(</span><span style=\"color:#79B8FF\">BuildContext</span><span style=\"color:#E1E4E8\"> context) {</span></span>\n<span class=\"line\"><span style=\"color:#F97583\">    return</span><span style=\"color:#79B8FF\"> Scaffold</span><span style=\"color:#E1E4E8\">(</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">      appBar</span><span style=\"color:#F97583\">:</span><span style=\"color:#79B8FF\"> AppBar</span><span style=\"color:#E1E4E8\">(</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">        title</span><span style=\"color:#F97583\">:</span><span style=\"color:#79B8FF\"> Text</span><span style=\"color:#E1E4E8\">(</span><span style=\"color:#9ECBFF\">'Flutter Demo'</span><span style=\"color:#E1E4E8\">),</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">      ),</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">      body</span><span style=\"color:#F97583\">:</span><span style=\"color:#79B8FF\"> Center</span><span style=\"color:#E1E4E8\">(</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">        child</span><span style=\"color:#F97583\">:</span><span style=\"color:#79B8FF\"> Column</span><span style=\"color:#E1E4E8\">(</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">          mainAxisAlignment</span><span style=\"color:#F97583\">:</span><span style=\"color:#79B8FF\"> MainAxisAlignment</span><span style=\"color:#E1E4E8\">.center,</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">          children</span><span style=\"color:#F97583\">:</span><span style=\"color:#F97583\"> &#x3C;</span><span style=\"color:#79B8FF\">Widget</span><span style=\"color:#F97583\">></span><span style=\"color:#E1E4E8\">[</span></span>\n<span class=\"line\"><span style=\"color:#79B8FF\">            Text</span><span style=\"color:#E1E4E8\">(</span></span>\n<span class=\"line\"><span style=\"color:#9ECBFF\">              'You have pushed the button this many times:'</span><span style=\"color:#E1E4E8\">,</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">            ),</span></span>\n<span class=\"line\"><span style=\"color:#79B8FF\">            Text</span><span style=\"color:#E1E4E8\">(</span></span>\n<span class=\"line\"><span style=\"color:#9ECBFF\">              '</span><span style=\"color:#9ECBFF\">$</span><span style=\"color:#79B8FF\">_counter</span><span style=\"color:#9ECBFF\">'</span><span style=\"color:#E1E4E8\">,</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">              style</span><span style=\"color:#F97583\">:</span><span style=\"color:#79B8FF\"> Theme</span><span style=\"color:#E1E4E8\">.</span><span style=\"color:#B392F0\">of</span><span style=\"color:#E1E4E8\">(context).textTheme.headline4,</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">            ),</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">          ],</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">        ),</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">      ),</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">      floatingActionButton</span><span style=\"color:#F97583\">:</span><span style=\"color:#79B8FF\"> FloatingActionButton</span><span style=\"color:#E1E4E8\">(</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">        onPressed</span><span style=\"color:#F97583\">:</span><span style=\"color:#E1E4E8\"> _incrementCounter,</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">        tooltip</span><span style=\"color:#F97583\">:</span><span style=\"color:#9ECBFF\"> 'Increment'</span><span style=\"color:#E1E4E8\">,</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">        child</span><span style=\"color:#F97583\">:</span><span style=\"color:#79B8FF\"> Icon</span><span style=\"color:#E1E4E8\">(</span><span style=\"color:#79B8FF\">Icons</span><span style=\"color:#E1E4E8\">.add),</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">      ),</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">    );</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">  }</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">}</span></span></code></pre>",{headings:182,localImagePaths:197,remoteImagePaths:198,frontmatter:199,imagePaths:202},[183,185,188,191,194],{depth:55,slug:184,text:164},"empezando-con-flutter",{depth:58,slug:186,text:187},"instalación-de-flutter","Instalación de Flutter",{depth:58,slug:189,text:190},"creación-de-un-nuevo-proyecto","Creación de un Nuevo Proyecto",{depth:58,slug:192,text:193},"ejecución-de-la-aplicación","Ejecución de la Aplicación",{depth:58,slug:195,text:196},"escribiendo-tu-primera-aplicación","Escribiendo tu Primera Aplicación",[],[],{title:164,date:200,description:166,author:169,image:177,tags:201},["Date","2024-08-10T00:00:00.000Z"],[171,172,173],[],"post-02.md",["Map",41,205,128,218,19,231,169,244],{id:41,data:206,filePath:214,assetImports:215,digest:217},{name:207,avatar:208,twitter:209,linkedIn:210,github:211,bio:212,subtitle:213},"Alice Johnson","__ASTRO_IMAGE_./avatars/alice-johnson.webp","alicejohnson_tech","https://www.linkedin.com/in/alicejohnson-tech","https://github.com/alicejohnson","Alice Johnson is a passionate software engineer with over 10 years of experience in the tech industry. She loves sharing her knowledge about web development and cloud computing.","Senior Software Engineer","src/content/author/alice-johnson.yml",[216],"./avatars/alice-johnson.webp","9857264a9316d2d9",{id:128,data:219,filePath:227,assetImports:228,digest:230},{name:220,avatar:221,twitter:222,linkedIn:223,github:224,bio:225,subtitle:226},"Bob Williams","__ASTRO_IMAGE_./avatars/bob-williams.webp","bobwilliams_dev","https://www.linkedin.com/in/bobwilliams-dev","https://github.com/bobwilliams","Bob Williams is a full-stack developer and tech enthusiast. He enjoys exploring new technologies and writing about his coding adventures.","Full-Stack Developer","src/content/author/bob-williams.yml",[229],"./avatars/bob-williams.webp","809b8ef17c8a8078",{id:19,data:232,filePath:240,assetImports:241,digest:243},{name:233,avatar:234,twitter:235,linkedIn:236,github:237,bio:238,subtitle:239},"Jane Doe","__ASTRO_IMAGE_./avatars/jane-doe.webp","janedoe_code","https://www.linkedin.com/in/janedoe-code","https://github.com/janedoe","Jane Doe is a software architect with a knack for designing scalable and efficient systems. She writes about software architecture, microservices, and DevOps.","Software Architect","src/content/author/jane-doe.yml",[242],"./avatars/jane-doe.webp","3089f5ec14a1d599",{id:169,data:245,filePath:253,assetImports:254,digest:256},{name:246,avatar:247,twitter:248,linkedIn:249,github:250,bio:251,subtitle:252},"John Smith","__ASTRO_IMAGE_./avatars/john-smith.webp","johnsmith_dev","https://www.linkedin.com/in/johnsmith-dev","https://github.com/johnsmith","John Smith is a backend developer who specializes in building robust APIs and services. He is passionate about open-source projects and community-driven development.","Backend Developer","src/content/author/john-smith.yml",[255],"./avatars/john-smith.webp","953455f5d5f7fb34"];

export { _astro_dataLayerContent as default };
